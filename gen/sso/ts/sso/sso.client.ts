// @generated by protobuf-ts 2.9.4
// @generated from protobuf file "sso/sso.proto" (package "auth", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { Auth } from "./sso";
import type { IsAdminResponse } from "./sso";
import type { IsAdminRequest } from "./sso";
import type { LoginResponse } from "./sso";
import type { LoginRequest } from "./sso";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { RegisterResponse } from "./sso";
import type { RegisterRequest } from "./sso";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service auth.Auth
 */
export interface IAuthClient {
    /**
     * @generated from protobuf rpc: Register(auth.RegisterRequest) returns (auth.RegisterResponse);
     */
    register(input: RegisterRequest, options?: RpcOptions): UnaryCall<RegisterRequest, RegisterResponse>;
    /**
     * @generated from protobuf rpc: Login(auth.LoginRequest) returns (auth.LoginResponse);
     */
    login(input: LoginRequest, options?: RpcOptions): UnaryCall<LoginRequest, LoginResponse>;
    /**
     * @generated from protobuf rpc: IsAdmin(auth.IsAdminRequest) returns (auth.IsAdminResponse);
     */
    isAdmin(input: IsAdminRequest, options?: RpcOptions): UnaryCall<IsAdminRequest, IsAdminResponse>;
}
/**
 * @generated from protobuf service auth.Auth
 */
export class AuthClient implements IAuthClient, ServiceInfo {
    typeName = Auth.typeName;
    methods = Auth.methods;
    options = Auth.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: Register(auth.RegisterRequest) returns (auth.RegisterResponse);
     */
    register(input: RegisterRequest, options?: RpcOptions): UnaryCall<RegisterRequest, RegisterResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<RegisterRequest, RegisterResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: Login(auth.LoginRequest) returns (auth.LoginResponse);
     */
    login(input: LoginRequest, options?: RpcOptions): UnaryCall<LoginRequest, LoginResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<LoginRequest, LoginResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: IsAdmin(auth.IsAdminRequest) returns (auth.IsAdminResponse);
     */
    isAdmin(input: IsAdminRequest, options?: RpcOptions): UnaryCall<IsAdminRequest, IsAdminResponse> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<IsAdminRequest, IsAdminResponse>("unary", this._transport, method, opt, input);
    }
}
