// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.29.0
// source: mdts/mdts.proto

package mdtsv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Username     string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Passwordhash []byte `protobuf:"bytes,3,opt,name=passwordhash,proto3" json:"passwordhash,omitempty"`
	Role         int64  `protobuf:"varint,4,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	mi := &file_mdts_mdts_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_mdts_mdts_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_mdts_mdts_proto_rawDescGZIP(), []int{0}
}

func (x *User) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *User) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *User) GetPasswordhash() []byte {
	if x != nil {
		return x.Passwordhash
	}
	return nil
}

func (x *User) GetRole() int64 {
	if x != nil {
		return x.Role
	}
	return 0
}

type Alert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Date      *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
	Time      *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=time,proto3" json:"time,omitempty"`
	BplaId    int64                  `protobuf:"varint,4,opt,name=bpla_id,json=bplaId,proto3" json:"bpla_id,omitempty"`
	Latitude  float32                `protobuf:"fixed32,5,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude float32                `protobuf:"fixed32,6,opt,name=longitude,proto3" json:"longitude,omitempty"`
}

func (x *Alert) Reset() {
	*x = Alert{}
	mi := &file_mdts_mdts_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Alert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Alert) ProtoMessage() {}

func (x *Alert) ProtoReflect() protoreflect.Message {
	mi := &file_mdts_mdts_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Alert.ProtoReflect.Descriptor instead.
func (*Alert) Descriptor() ([]byte, []int) {
	return file_mdts_mdts_proto_rawDescGZIP(), []int{1}
}

func (x *Alert) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Alert) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *Alert) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *Alert) GetBplaId() int64 {
	if x != nil {
		return x.BplaId
	}
	return 0
}

func (x *Alert) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *Alert) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

type Bpla struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Brand     string                 `protobuf:"bytes,2,opt,name=brand,proto3" json:"brand,omitempty"`
	Model     string                 `protobuf:"bytes,3,opt,name=model,proto3" json:"model,omitempty"`
	Entrydate *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=entrydate,proto3" json:"entrydate,omitempty"`
	Inusage   bool                   `protobuf:"varint,5,opt,name=inusage,proto3" json:"inusage,omitempty"`
}

func (x *Bpla) Reset() {
	*x = Bpla{}
	mi := &file_mdts_mdts_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Bpla) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bpla) ProtoMessage() {}

func (x *Bpla) ProtoReflect() protoreflect.Message {
	mi := &file_mdts_mdts_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bpla.ProtoReflect.Descriptor instead.
func (*Bpla) Descriptor() ([]byte, []int) {
	return file_mdts_mdts_proto_rawDescGZIP(), []int{2}
}

func (x *Bpla) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Bpla) GetBrand() string {
	if x != nil {
		return x.Brand
	}
	return ""
}

func (x *Bpla) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *Bpla) GetEntrydate() *timestamppb.Timestamp {
	if x != nil {
		return x.Entrydate
	}
	return nil
}

func (x *Bpla) GetInusage() bool {
	if x != nil {
		return x.Inusage
	}
	return false
}

type CreateAlertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date      *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	Time      *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	BplaId    int64                  `protobuf:"varint,3,opt,name=bpla_id,json=bplaId,proto3" json:"bpla_id,omitempty"`
	Latitude  float32                `protobuf:"fixed32,4,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude float32                `protobuf:"fixed32,5,opt,name=longitude,proto3" json:"longitude,omitempty"`
}

func (x *CreateAlertRequest) Reset() {
	*x = CreateAlertRequest{}
	mi := &file_mdts_mdts_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAlertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAlertRequest) ProtoMessage() {}

func (x *CreateAlertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mdts_mdts_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAlertRequest.ProtoReflect.Descriptor instead.
func (*CreateAlertRequest) Descriptor() ([]byte, []int) {
	return file_mdts_mdts_proto_rawDescGZIP(), []int{3}
}

func (x *CreateAlertRequest) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *CreateAlertRequest) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *CreateAlertRequest) GetBplaId() int64 {
	if x != nil {
		return x.BplaId
	}
	return 0
}

func (x *CreateAlertRequest) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *CreateAlertRequest) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

type GetAlertsByPeriodRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartDate *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate   *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
}

func (x *GetAlertsByPeriodRequest) Reset() {
	*x = GetAlertsByPeriodRequest{}
	mi := &file_mdts_mdts_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAlertsByPeriodRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlertsByPeriodRequest) ProtoMessage() {}

func (x *GetAlertsByPeriodRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mdts_mdts_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlertsByPeriodRequest.ProtoReflect.Descriptor instead.
func (*GetAlertsByPeriodRequest) Descriptor() ([]byte, []int) {
	return file_mdts_mdts_proto_rawDescGZIP(), []int{4}
}

func (x *GetAlertsByPeriodRequest) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *GetAlertsByPeriodRequest) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

type CreateBplaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Brand     string                 `protobuf:"bytes,1,opt,name=brand,proto3" json:"brand,omitempty"`
	Model     string                 `protobuf:"bytes,2,opt,name=model,proto3" json:"model,omitempty"`
	Entrydate *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=entrydate,proto3" json:"entrydate,omitempty"`
	Inusage   bool                   `protobuf:"varint,4,opt,name=inusage,proto3" json:"inusage,omitempty"`
}

func (x *CreateBplaRequest) Reset() {
	*x = CreateBplaRequest{}
	mi := &file_mdts_mdts_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBplaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBplaRequest) ProtoMessage() {}

func (x *CreateBplaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mdts_mdts_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBplaRequest.ProtoReflect.Descriptor instead.
func (*CreateBplaRequest) Descriptor() ([]byte, []int) {
	return file_mdts_mdts_proto_rawDescGZIP(), []int{5}
}

func (x *CreateBplaRequest) GetBrand() string {
	if x != nil {
		return x.Brand
	}
	return ""
}

func (x *CreateBplaRequest) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *CreateBplaRequest) GetEntrydate() *timestamppb.Timestamp {
	if x != nil {
		return x.Entrydate
	}
	return nil
}

func (x *CreateBplaRequest) GetInusage() bool {
	if x != nil {
		return x.Inusage
	}
	return false
}

type GetUserByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetUserByIdRequest) Reset() {
	*x = GetUserByIdRequest{}
	mi := &file_mdts_mdts_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserByIdRequest) ProtoMessage() {}

func (x *GetUserByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mdts_mdts_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserByIdRequest.ProtoReflect.Descriptor instead.
func (*GetUserByIdRequest) Descriptor() ([]byte, []int) {
	return file_mdts_mdts_proto_rawDescGZIP(), []int{6}
}

func (x *GetUserByIdRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetUserByUsernameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *GetUserByUsernameRequest) Reset() {
	*x = GetUserByUsernameRequest{}
	mi := &file_mdts_mdts_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserByUsernameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserByUsernameRequest) ProtoMessage() {}

func (x *GetUserByUsernameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mdts_mdts_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserByUsernameRequest.ProtoReflect.Descriptor instead.
func (*GetUserByUsernameRequest) Descriptor() ([]byte, []int) {
	return file_mdts_mdts_proto_rawDescGZIP(), []int{7}
}

func (x *GetUserByUsernameRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type GetAllUsersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAllUsersRequest) Reset() {
	*x = GetAllUsersRequest{}
	mi := &file_mdts_mdts_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllUsersRequest) ProtoMessage() {}

func (x *GetAllUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mdts_mdts_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllUsersRequest.ProtoReflect.Descriptor instead.
func (*GetAllUsersRequest) Descriptor() ([]byte, []int) {
	return file_mdts_mdts_proto_rawDescGZIP(), []int{8}
}

type UpdateUserParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Username     string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Passwordhash []byte `protobuf:"bytes,3,opt,name=passwordhash,proto3" json:"passwordhash,omitempty"`
	Role         int64  `protobuf:"varint,4,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *UpdateUserParams) Reset() {
	*x = UpdateUserParams{}
	mi := &file_mdts_mdts_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserParams) ProtoMessage() {}

func (x *UpdateUserParams) ProtoReflect() protoreflect.Message {
	mi := &file_mdts_mdts_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserParams.ProtoReflect.Descriptor instead.
func (*UpdateUserParams) Descriptor() ([]byte, []int) {
	return file_mdts_mdts_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateUserParams) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateUserParams) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UpdateUserParams) GetPasswordhash() []byte {
	if x != nil {
		return x.Passwordhash
	}
	return nil
}

func (x *UpdateUserParams) GetRole() int64 {
	if x != nil {
		return x.Role
	}
	return 0
}

type UpdateUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Updateuserparams *UpdateUserParams `protobuf:"bytes,1,opt,name=updateuserparams,proto3" json:"updateuserparams,omitempty"`
}

func (x *UpdateUserRequest) Reset() {
	*x = UpdateUserRequest{}
	mi := &file_mdts_mdts_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserRequest) ProtoMessage() {}

func (x *UpdateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mdts_mdts_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserRequest) Descriptor() ([]byte, []int) {
	return file_mdts_mdts_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateUserRequest) GetUpdateuserparams() *UpdateUserParams {
	if x != nil {
		return x.Updateuserparams
	}
	return nil
}

type DeleteUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteUserRequest) Reset() {
	*x = DeleteUserRequest{}
	mi := &file_mdts_mdts_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserRequest) ProtoMessage() {}

func (x *DeleteUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mdts_mdts_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserRequest.ProtoReflect.Descriptor instead.
func (*DeleteUserRequest) Descriptor() ([]byte, []int) {
	return file_mdts_mdts_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteUserRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *UserResponse) Reset() {
	*x = UserResponse{}
	mi := &file_mdts_mdts_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserResponse) ProtoMessage() {}

func (x *UserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mdts_mdts_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserResponse.ProtoReflect.Descriptor instead.
func (*UserResponse) Descriptor() ([]byte, []int) {
	return file_mdts_mdts_proto_rawDescGZIP(), []int{12}
}

func (x *UserResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type UsersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User []*User `protobuf:"bytes,1,rep,name=user,proto3" json:"user,omitempty"`
}

func (x *UsersResponse) Reset() {
	*x = UsersResponse{}
	mi := &file_mdts_mdts_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersResponse) ProtoMessage() {}

func (x *UsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mdts_mdts_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersResponse.ProtoReflect.Descriptor instead.
func (*UsersResponse) Descriptor() ([]byte, []int) {
	return file_mdts_mdts_proto_rawDescGZIP(), []int{13}
}

func (x *UsersResponse) GetUser() []*User {
	if x != nil {
		return x.User
	}
	return nil
}

type UpdateUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error string `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *UpdateUserResponse) Reset() {
	*x = UpdateUserResponse{}
	mi := &file_mdts_mdts_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserResponse) ProtoMessage() {}

func (x *UpdateUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mdts_mdts_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserResponse) Descriptor() ([]byte, []int) {
	return file_mdts_mdts_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateUserResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type DeleteUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error string `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *DeleteUserResponse) Reset() {
	*x = DeleteUserResponse{}
	mi := &file_mdts_mdts_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserResponse) ProtoMessage() {}

func (x *DeleteUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mdts_mdts_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserResponse.ProtoReflect.Descriptor instead.
func (*DeleteUserResponse) Descriptor() ([]byte, []int) {
	return file_mdts_mdts_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteUserResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type GetAlertByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetAlertByIdRequest) Reset() {
	*x = GetAlertByIdRequest{}
	mi := &file_mdts_mdts_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAlertByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlertByIdRequest) ProtoMessage() {}

func (x *GetAlertByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mdts_mdts_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlertByIdRequest.ProtoReflect.Descriptor instead.
func (*GetAlertByIdRequest) Descriptor() ([]byte, []int) {
	return file_mdts_mdts_proto_rawDescGZIP(), []int{16}
}

func (x *GetAlertByIdRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetAlertByUsernameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *GetAlertByUsernameRequest) Reset() {
	*x = GetAlertByUsernameRequest{}
	mi := &file_mdts_mdts_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAlertByUsernameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlertByUsernameRequest) ProtoMessage() {}

func (x *GetAlertByUsernameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mdts_mdts_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlertByUsernameRequest.ProtoReflect.Descriptor instead.
func (*GetAlertByUsernameRequest) Descriptor() ([]byte, []int) {
	return file_mdts_mdts_proto_rawDescGZIP(), []int{17}
}

func (x *GetAlertByUsernameRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type GetAllAlertsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAllAlertsRequest) Reset() {
	*x = GetAllAlertsRequest{}
	mi := &file_mdts_mdts_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllAlertsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllAlertsRequest) ProtoMessage() {}

func (x *GetAllAlertsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mdts_mdts_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllAlertsRequest.ProtoReflect.Descriptor instead.
func (*GetAllAlertsRequest) Descriptor() ([]byte, []int) {
	return file_mdts_mdts_proto_rawDescGZIP(), []int{18}
}

type UpdateAlertParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Date      *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
	Time      *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=time,proto3" json:"time,omitempty"`
	BplaId    int64                  `protobuf:"varint,4,opt,name=bpla_id,json=bplaId,proto3" json:"bpla_id,omitempty"`
	Latitude  float32                `protobuf:"fixed32,5,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude float32                `protobuf:"fixed32,6,opt,name=longitude,proto3" json:"longitude,omitempty"`
}

func (x *UpdateAlertParams) Reset() {
	*x = UpdateAlertParams{}
	mi := &file_mdts_mdts_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAlertParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAlertParams) ProtoMessage() {}

func (x *UpdateAlertParams) ProtoReflect() protoreflect.Message {
	mi := &file_mdts_mdts_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAlertParams.ProtoReflect.Descriptor instead.
func (*UpdateAlertParams) Descriptor() ([]byte, []int) {
	return file_mdts_mdts_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateAlertParams) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateAlertParams) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *UpdateAlertParams) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *UpdateAlertParams) GetBplaId() int64 {
	if x != nil {
		return x.BplaId
	}
	return 0
}

func (x *UpdateAlertParams) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *UpdateAlertParams) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

type UpdateAlertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Updatealertparams *UpdateAlertParams `protobuf:"bytes,1,opt,name=updatealertparams,proto3" json:"updatealertparams,omitempty"`
}

func (x *UpdateAlertRequest) Reset() {
	*x = UpdateAlertRequest{}
	mi := &file_mdts_mdts_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAlertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAlertRequest) ProtoMessage() {}

func (x *UpdateAlertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mdts_mdts_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAlertRequest.ProtoReflect.Descriptor instead.
func (*UpdateAlertRequest) Descriptor() ([]byte, []int) {
	return file_mdts_mdts_proto_rawDescGZIP(), []int{20}
}

func (x *UpdateAlertRequest) GetUpdatealertparams() *UpdateAlertParams {
	if x != nil {
		return x.Updatealertparams
	}
	return nil
}

type DeleteAlertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteAlertRequest) Reset() {
	*x = DeleteAlertRequest{}
	mi := &file_mdts_mdts_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAlertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAlertRequest) ProtoMessage() {}

func (x *DeleteAlertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mdts_mdts_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAlertRequest.ProtoReflect.Descriptor instead.
func (*DeleteAlertRequest) Descriptor() ([]byte, []int) {
	return file_mdts_mdts_proto_rawDescGZIP(), []int{21}
}

func (x *DeleteAlertRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type AlertResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alert *Alert `protobuf:"bytes,1,opt,name=alert,proto3" json:"alert,omitempty"`
}

func (x *AlertResponse) Reset() {
	*x = AlertResponse{}
	mi := &file_mdts_mdts_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AlertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertResponse) ProtoMessage() {}

func (x *AlertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mdts_mdts_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertResponse.ProtoReflect.Descriptor instead.
func (*AlertResponse) Descriptor() ([]byte, []int) {
	return file_mdts_mdts_proto_rawDescGZIP(), []int{22}
}

func (x *AlertResponse) GetAlert() *Alert {
	if x != nil {
		return x.Alert
	}
	return nil
}

type AlertsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alert []*Alert `protobuf:"bytes,1,rep,name=alert,proto3" json:"alert,omitempty"`
}

func (x *AlertsResponse) Reset() {
	*x = AlertsResponse{}
	mi := &file_mdts_mdts_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AlertsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertsResponse) ProtoMessage() {}

func (x *AlertsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mdts_mdts_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertsResponse.ProtoReflect.Descriptor instead.
func (*AlertsResponse) Descriptor() ([]byte, []int) {
	return file_mdts_mdts_proto_rawDescGZIP(), []int{23}
}

func (x *AlertsResponse) GetAlert() []*Alert {
	if x != nil {
		return x.Alert
	}
	return nil
}

type UpdateAlertResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error string `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *UpdateAlertResponse) Reset() {
	*x = UpdateAlertResponse{}
	mi := &file_mdts_mdts_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAlertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAlertResponse) ProtoMessage() {}

func (x *UpdateAlertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mdts_mdts_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAlertResponse.ProtoReflect.Descriptor instead.
func (*UpdateAlertResponse) Descriptor() ([]byte, []int) {
	return file_mdts_mdts_proto_rawDescGZIP(), []int{24}
}

func (x *UpdateAlertResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type DeleteAlertResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error string `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *DeleteAlertResponse) Reset() {
	*x = DeleteAlertResponse{}
	mi := &file_mdts_mdts_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAlertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAlertResponse) ProtoMessage() {}

func (x *DeleteAlertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mdts_mdts_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAlertResponse.ProtoReflect.Descriptor instead.
func (*DeleteAlertResponse) Descriptor() ([]byte, []int) {
	return file_mdts_mdts_proto_rawDescGZIP(), []int{25}
}

func (x *DeleteAlertResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type GetBplaByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetBplaByIdRequest) Reset() {
	*x = GetBplaByIdRequest{}
	mi := &file_mdts_mdts_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBplaByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBplaByIdRequest) ProtoMessage() {}

func (x *GetBplaByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mdts_mdts_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBplaByIdRequest.ProtoReflect.Descriptor instead.
func (*GetBplaByIdRequest) Descriptor() ([]byte, []int) {
	return file_mdts_mdts_proto_rawDescGZIP(), []int{26}
}

func (x *GetBplaByIdRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetBplaByUsernameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *GetBplaByUsernameRequest) Reset() {
	*x = GetBplaByUsernameRequest{}
	mi := &file_mdts_mdts_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBplaByUsernameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBplaByUsernameRequest) ProtoMessage() {}

func (x *GetBplaByUsernameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mdts_mdts_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBplaByUsernameRequest.ProtoReflect.Descriptor instead.
func (*GetBplaByUsernameRequest) Descriptor() ([]byte, []int) {
	return file_mdts_mdts_proto_rawDescGZIP(), []int{27}
}

func (x *GetBplaByUsernameRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type GetAllBplasRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAllBplasRequest) Reset() {
	*x = GetAllBplasRequest{}
	mi := &file_mdts_mdts_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllBplasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllBplasRequest) ProtoMessage() {}

func (x *GetAllBplasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mdts_mdts_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllBplasRequest.ProtoReflect.Descriptor instead.
func (*GetAllBplasRequest) Descriptor() ([]byte, []int) {
	return file_mdts_mdts_proto_rawDescGZIP(), []int{28}
}

type GetBplaByModelAndBrandRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Brand string `protobuf:"bytes,1,opt,name=brand,proto3" json:"brand,omitempty"`
	Model string `protobuf:"bytes,2,opt,name=model,proto3" json:"model,omitempty"`
}

func (x *GetBplaByModelAndBrandRequest) Reset() {
	*x = GetBplaByModelAndBrandRequest{}
	mi := &file_mdts_mdts_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBplaByModelAndBrandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBplaByModelAndBrandRequest) ProtoMessage() {}

func (x *GetBplaByModelAndBrandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mdts_mdts_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBplaByModelAndBrandRequest.ProtoReflect.Descriptor instead.
func (*GetBplaByModelAndBrandRequest) Descriptor() ([]byte, []int) {
	return file_mdts_mdts_proto_rawDescGZIP(), []int{29}
}

func (x *GetBplaByModelAndBrandRequest) GetBrand() string {
	if x != nil {
		return x.Brand
	}
	return ""
}

func (x *GetBplaByModelAndBrandRequest) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

type GetBplaByEntryDateRangeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartDate *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate   *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
}

func (x *GetBplaByEntryDateRangeRequest) Reset() {
	*x = GetBplaByEntryDateRangeRequest{}
	mi := &file_mdts_mdts_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBplaByEntryDateRangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBplaByEntryDateRangeRequest) ProtoMessage() {}

func (x *GetBplaByEntryDateRangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mdts_mdts_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBplaByEntryDateRangeRequest.ProtoReflect.Descriptor instead.
func (*GetBplaByEntryDateRangeRequest) Descriptor() ([]byte, []int) {
	return file_mdts_mdts_proto_rawDescGZIP(), []int{30}
}

func (x *GetBplaByEntryDateRangeRequest) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *GetBplaByEntryDateRangeRequest) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

type GetBplaByInUsageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InUsage bool `protobuf:"varint,1,opt,name=in_usage,json=inUsage,proto3" json:"in_usage,omitempty"`
}

func (x *GetBplaByInUsageRequest) Reset() {
	*x = GetBplaByInUsageRequest{}
	mi := &file_mdts_mdts_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBplaByInUsageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBplaByInUsageRequest) ProtoMessage() {}

func (x *GetBplaByInUsageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mdts_mdts_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBplaByInUsageRequest.ProtoReflect.Descriptor instead.
func (*GetBplaByInUsageRequest) Descriptor() ([]byte, []int) {
	return file_mdts_mdts_proto_rawDescGZIP(), []int{31}
}

func (x *GetBplaByInUsageRequest) GetInUsage() bool {
	if x != nil {
		return x.InUsage
	}
	return false
}

type UpdateBplaParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Brand     string                 `protobuf:"bytes,2,opt,name=brand,proto3" json:"brand,omitempty"`
	Model     string                 `protobuf:"bytes,3,opt,name=model,proto3" json:"model,omitempty"`
	Entrydate *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=entrydate,proto3" json:"entrydate,omitempty"`
	Inusage   bool                   `protobuf:"varint,5,opt,name=inusage,proto3" json:"inusage,omitempty"`
}

func (x *UpdateBplaParams) Reset() {
	*x = UpdateBplaParams{}
	mi := &file_mdts_mdts_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateBplaParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBplaParams) ProtoMessage() {}

func (x *UpdateBplaParams) ProtoReflect() protoreflect.Message {
	mi := &file_mdts_mdts_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBplaParams.ProtoReflect.Descriptor instead.
func (*UpdateBplaParams) Descriptor() ([]byte, []int) {
	return file_mdts_mdts_proto_rawDescGZIP(), []int{32}
}

func (x *UpdateBplaParams) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateBplaParams) GetBrand() string {
	if x != nil {
		return x.Brand
	}
	return ""
}

func (x *UpdateBplaParams) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *UpdateBplaParams) GetEntrydate() *timestamppb.Timestamp {
	if x != nil {
		return x.Entrydate
	}
	return nil
}

func (x *UpdateBplaParams) GetInusage() bool {
	if x != nil {
		return x.Inusage
	}
	return false
}

type UpdateBplaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Updatebplaparams *UpdateBplaParams `protobuf:"bytes,1,opt,name=updatebplaparams,proto3" json:"updatebplaparams,omitempty"`
}

func (x *UpdateBplaRequest) Reset() {
	*x = UpdateBplaRequest{}
	mi := &file_mdts_mdts_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateBplaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBplaRequest) ProtoMessage() {}

func (x *UpdateBplaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mdts_mdts_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBplaRequest.ProtoReflect.Descriptor instead.
func (*UpdateBplaRequest) Descriptor() ([]byte, []int) {
	return file_mdts_mdts_proto_rawDescGZIP(), []int{33}
}

func (x *UpdateBplaRequest) GetUpdatebplaparams() *UpdateBplaParams {
	if x != nil {
		return x.Updatebplaparams
	}
	return nil
}

type DeleteBplaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteBplaRequest) Reset() {
	*x = DeleteBplaRequest{}
	mi := &file_mdts_mdts_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteBplaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBplaRequest) ProtoMessage() {}

func (x *DeleteBplaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mdts_mdts_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBplaRequest.ProtoReflect.Descriptor instead.
func (*DeleteBplaRequest) Descriptor() ([]byte, []int) {
	return file_mdts_mdts_proto_rawDescGZIP(), []int{34}
}

func (x *DeleteBplaRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type BplaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bpla *Bpla `protobuf:"bytes,1,opt,name=bpla,proto3" json:"bpla,omitempty"`
}

func (x *BplaResponse) Reset() {
	*x = BplaResponse{}
	mi := &file_mdts_mdts_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BplaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BplaResponse) ProtoMessage() {}

func (x *BplaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mdts_mdts_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BplaResponse.ProtoReflect.Descriptor instead.
func (*BplaResponse) Descriptor() ([]byte, []int) {
	return file_mdts_mdts_proto_rawDescGZIP(), []int{35}
}

func (x *BplaResponse) GetBpla() *Bpla {
	if x != nil {
		return x.Bpla
	}
	return nil
}

type BplasResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bpla []*Bpla `protobuf:"bytes,1,rep,name=bpla,proto3" json:"bpla,omitempty"`
}

func (x *BplasResponse) Reset() {
	*x = BplasResponse{}
	mi := &file_mdts_mdts_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BplasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BplasResponse) ProtoMessage() {}

func (x *BplasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mdts_mdts_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BplasResponse.ProtoReflect.Descriptor instead.
func (*BplasResponse) Descriptor() ([]byte, []int) {
	return file_mdts_mdts_proto_rawDescGZIP(), []int{36}
}

func (x *BplasResponse) GetBpla() []*Bpla {
	if x != nil {
		return x.Bpla
	}
	return nil
}

type UpdateBplaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error string `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *UpdateBplaResponse) Reset() {
	*x = UpdateBplaResponse{}
	mi := &file_mdts_mdts_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateBplaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBplaResponse) ProtoMessage() {}

func (x *UpdateBplaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mdts_mdts_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBplaResponse.ProtoReflect.Descriptor instead.
func (*UpdateBplaResponse) Descriptor() ([]byte, []int) {
	return file_mdts_mdts_proto_rawDescGZIP(), []int{37}
}

func (x *UpdateBplaResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type DeleteBplaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error string `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *DeleteBplaResponse) Reset() {
	*x = DeleteBplaResponse{}
	mi := &file_mdts_mdts_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteBplaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBplaResponse) ProtoMessage() {}

func (x *DeleteBplaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mdts_mdts_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBplaResponse.ProtoReflect.Descriptor instead.
func (*DeleteBplaResponse) Descriptor() ([]byte, []int) {
	return file_mdts_mdts_proto_rawDescGZIP(), []int{38}
}

func (x *DeleteBplaResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

var File_mdts_mdts_proto protoreflect.FileDescriptor

var file_mdts_mdts_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x6d, 0x64, 0x74, 0x73, 0x2f, 0x6d, 0x64, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x04, 0x6d, 0x64, 0x74, 0x73, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6a, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0c, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x68, 0x61, 0x73, 0x68,
	0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x72, 0x6f, 0x6c, 0x65, 0x22, 0xca, 0x01, 0x0a, 0x05, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2e,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x2e,
	0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x17,
	0x0a, 0x07, 0x62, 0x70, 0x6c, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x62, 0x70, 0x6c, 0x61, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64,
	0x65, 0x22, 0x96, 0x01, 0x0a, 0x04, 0x42, 0x70, 0x6c, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x72,
	0x61, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x38, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x69, 0x6e, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x69, 0x6e, 0x75, 0x73, 0x61, 0x67, 0x65, 0x22, 0xc7, 0x01, 0x0a, 0x12, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x70, 0x6c, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x62, 0x70, 0x6c, 0x61, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61,
	0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x6c, 0x61,
	0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69,
	0x74, 0x75, 0x64, 0x65, 0x22, 0x8c, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x73, 0x42, 0x79, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x35, 0x0a, 0x08,
	0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44,
	0x61, 0x74, 0x65, 0x22, 0x93, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x70,
	0x6c, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x72, 0x61,
	0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x38, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x69, 0x6e, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x69, 0x6e, 0x75, 0x73, 0x61, 0x67, 0x65, 0x22, 0x24, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x36, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x14, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x76, 0x0a,
	0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0c, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x68, 0x61, 0x73,
	0x68, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x57, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x10, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x75, 0x73, 0x65, 0x72, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x64, 0x74, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x10, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x75, 0x73, 0x65, 0x72, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x23,
	0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x2e, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x6d, 0x64, 0x74, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x22, 0x2f, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6d, 0x64, 0x74, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x22, 0x2a, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x22, 0x2a, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x25, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x37, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x42,
	0x79, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x15, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0xd6, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x70, 0x6c,
	0x61, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x62, 0x70, 0x6c, 0x61,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x22, 0x5b, 0x0a, 0x12,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x45, 0x0a, 0x11, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x6d, 0x64, 0x74, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x11, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x24, 0x0a, 0x12, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x32, 0x0a, 0x0d, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x21, 0x0a, 0x05, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x6d, 0x64, 0x74, 0x73, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x05, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x22, 0x33, 0x0a, 0x0e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x05, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6d, 0x64, 0x74, 0x73, 0x2e, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x52, 0x05, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x22, 0x2b, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x2b, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x22, 0x24, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x42, 0x70, 0x6c, 0x61, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x36, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x42,
	0x70, 0x6c, 0x61, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x14, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x42, 0x70, 0x6c, 0x61, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4b, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x42, 0x70, 0x6c,
	0x61, 0x42, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x41, 0x6e, 0x64, 0x42, 0x72, 0x61, 0x6e, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x22, 0x92, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x42, 0x70, 0x6c, 0x61, 0x42,
	0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x44, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x22, 0x34, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x42,
	0x70, 0x6c, 0x61, 0x42, 0x79, 0x49, 0x6e, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x6e, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x6e, 0x55, 0x73, 0x61, 0x67, 0x65, 0x22, 0xa2,
	0x01, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x70, 0x6c, 0x61, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12,
	0x38, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x65, 0x6e, 0x74, 0x72, 0x79, 0x64, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6e, 0x75,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x6e, 0x75, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x57, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x70, 0x6c,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x10, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x62, 0x70, 0x6c, 0x61, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x64, 0x74, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x42, 0x70, 0x6c, 0x61, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x10, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x62, 0x70, 0x6c, 0x61, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x23, 0x0a, 0x11,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x70, 0x6c, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x2e, 0x0a, 0x0c, 0x42, 0x70, 0x6c, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1e, 0x0a, 0x04, 0x62, 0x70, 0x6c, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x6d, 0x64, 0x74, 0x73, 0x2e, 0x42, 0x70, 0x6c, 0x61, 0x52, 0x04, 0x62, 0x70, 0x6c,
	0x61, 0x22, 0x2f, 0x0a, 0x0d, 0x42, 0x70, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1e, 0x0a, 0x04, 0x62, 0x70, 0x6c, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x6d, 0x64, 0x74, 0x73, 0x2e, 0x42, 0x70, 0x6c, 0x61, 0x52, 0x04, 0x62, 0x70,
	0x6c, 0x61, 0x22, 0x2a, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x70, 0x6c, 0x61,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x2a,
	0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x70, 0x6c, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x32, 0xbe, 0x02, 0x0a, 0x0b, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x37, 0x0a, 0x07, 0x47, 0x65,
	0x74, 0x42, 0x79, 0x49, 0x64, 0x12, 0x18, 0x2e, 0x6d, 0x64, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x12, 0x2e, 0x6d, 0x64, 0x74, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x2e, 0x6d, 0x64, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x6d, 0x64, 0x74, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x12, 0x18, 0x2e, 0x6d, 0x64, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x6d,
	0x64, 0x74, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3b, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x17, 0x2e, 0x6d, 0x64,
	0x74, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x6d, 0x64, 0x74, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b,
	0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x17, 0x2e, 0x6d, 0x64, 0x74, 0x73, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x18, 0x2e, 0x6d, 0x64, 0x74, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x80, 0x03, 0x0a, 0x0c,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x37, 0x0a, 0x06,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x18, 0x2e, 0x6d, 0x64, 0x74, 0x73, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x13, 0x2e, 0x6d, 0x64, 0x74, 0x73, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64,
	0x12, 0x19, 0x2e, 0x6d, 0x64, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x6d, 0x64,
	0x74, 0x73, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x43, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x42, 0x79, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12,
	0x1e, 0x2e, 0x6d, 0x64, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73,
	0x42, 0x79, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x14, 0x2e, 0x6d, 0x64, 0x74, 0x73, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x12,
	0x19, 0x2e, 0x6d, 0x64, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6d, 0x64, 0x74,
	0x73, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3d, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x18, 0x2e, 0x6d, 0x64, 0x74,
	0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6d, 0x64, 0x74, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3d, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x18, 0x2e, 0x6d, 0x64, 0x74, 0x73,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6d, 0x64, 0x74, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x96,
	0x04, 0x0a, 0x0b, 0x42, 0x70, 0x6c, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x35,
	0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x17, 0x2e, 0x6d, 0x64, 0x74, 0x73, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x70, 0x6c, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x12, 0x2e, 0x6d, 0x64, 0x74, 0x73, 0x2e, 0x42, 0x70, 0x6c, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64,
	0x12, 0x18, 0x2e, 0x6d, 0x64, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x70, 0x6c, 0x61, 0x42,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x6d, 0x64, 0x74,
	0x73, 0x2e, 0x42, 0x70, 0x6c, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x42, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x44, 0x61, 0x74, 0x65,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x24, 0x2e, 0x6d, 0x64, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x42, 0x70, 0x6c, 0x61, 0x42, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x44, 0x61, 0x74, 0x65, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x6d, 0x64,
	0x74, 0x73, 0x2e, 0x42, 0x70, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x42, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x6e, 0x55, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x1d, 0x2e, 0x6d, 0x64, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x70, 0x6c, 0x61, 0x42,
	0x79, 0x49, 0x6e, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x13, 0x2e, 0x6d, 0x64, 0x74, 0x73, 0x2e, 0x42, 0x70, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x42, 0x79, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x41, 0x6e, 0x64, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x23, 0x2e, 0x6d, 0x64, 0x74,
	0x73, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x70, 0x6c, 0x61, 0x42, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x41, 0x6e, 0x64, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x13, 0x2e, 0x6d, 0x64, 0x74, 0x73, 0x2e, 0x42, 0x70, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x12, 0x18,
	0x2e, 0x6d, 0x64, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x42, 0x70, 0x6c, 0x61,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x6d, 0x64, 0x74, 0x73, 0x2e,
	0x42, 0x70, 0x6c, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a,
	0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x17, 0x2e, 0x6d, 0x64, 0x74, 0x73, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x70, 0x6c, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x18, 0x2e, 0x6d, 0x64, 0x74, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x70,
	0x6c, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x06, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x12, 0x17, 0x2e, 0x6d, 0x64, 0x74, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x42, 0x70, 0x6c, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e,
	0x6d, 0x64, 0x74, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x70, 0x6c, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x18, 0x5a, 0x16, 0x77, 0x61, 0x75, 0x70, 0x69,
	0x6e, 0x67, 0x2e, 0x6d, 0x64, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x3b, 0x6d, 0x64, 0x74, 0x73, 0x76,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mdts_mdts_proto_rawDescOnce sync.Once
	file_mdts_mdts_proto_rawDescData = file_mdts_mdts_proto_rawDesc
)

func file_mdts_mdts_proto_rawDescGZIP() []byte {
	file_mdts_mdts_proto_rawDescOnce.Do(func() {
		file_mdts_mdts_proto_rawDescData = protoimpl.X.CompressGZIP(file_mdts_mdts_proto_rawDescData)
	})
	return file_mdts_mdts_proto_rawDescData
}

var file_mdts_mdts_proto_msgTypes = make([]protoimpl.MessageInfo, 39)
var file_mdts_mdts_proto_goTypes = []any{
	(*User)(nil),                           // 0: mdts.User
	(*Alert)(nil),                          // 1: mdts.Alert
	(*Bpla)(nil),                           // 2: mdts.Bpla
	(*CreateAlertRequest)(nil),             // 3: mdts.CreateAlertRequest
	(*GetAlertsByPeriodRequest)(nil),       // 4: mdts.GetAlertsByPeriodRequest
	(*CreateBplaRequest)(nil),              // 5: mdts.CreateBplaRequest
	(*GetUserByIdRequest)(nil),             // 6: mdts.GetUserByIdRequest
	(*GetUserByUsernameRequest)(nil),       // 7: mdts.GetUserByUsernameRequest
	(*GetAllUsersRequest)(nil),             // 8: mdts.GetAllUsersRequest
	(*UpdateUserParams)(nil),               // 9: mdts.UpdateUserParams
	(*UpdateUserRequest)(nil),              // 10: mdts.UpdateUserRequest
	(*DeleteUserRequest)(nil),              // 11: mdts.DeleteUserRequest
	(*UserResponse)(nil),                   // 12: mdts.UserResponse
	(*UsersResponse)(nil),                  // 13: mdts.UsersResponse
	(*UpdateUserResponse)(nil),             // 14: mdts.UpdateUserResponse
	(*DeleteUserResponse)(nil),             // 15: mdts.DeleteUserResponse
	(*GetAlertByIdRequest)(nil),            // 16: mdts.GetAlertByIdRequest
	(*GetAlertByUsernameRequest)(nil),      // 17: mdts.GetAlertByUsernameRequest
	(*GetAllAlertsRequest)(nil),            // 18: mdts.GetAllAlertsRequest
	(*UpdateAlertParams)(nil),              // 19: mdts.UpdateAlertParams
	(*UpdateAlertRequest)(nil),             // 20: mdts.UpdateAlertRequest
	(*DeleteAlertRequest)(nil),             // 21: mdts.DeleteAlertRequest
	(*AlertResponse)(nil),                  // 22: mdts.AlertResponse
	(*AlertsResponse)(nil),                 // 23: mdts.AlertsResponse
	(*UpdateAlertResponse)(nil),            // 24: mdts.UpdateAlertResponse
	(*DeleteAlertResponse)(nil),            // 25: mdts.DeleteAlertResponse
	(*GetBplaByIdRequest)(nil),             // 26: mdts.GetBplaByIdRequest
	(*GetBplaByUsernameRequest)(nil),       // 27: mdts.GetBplaByUsernameRequest
	(*GetAllBplasRequest)(nil),             // 28: mdts.GetAllBplasRequest
	(*GetBplaByModelAndBrandRequest)(nil),  // 29: mdts.GetBplaByModelAndBrandRequest
	(*GetBplaByEntryDateRangeRequest)(nil), // 30: mdts.GetBplaByEntryDateRangeRequest
	(*GetBplaByInUsageRequest)(nil),        // 31: mdts.GetBplaByInUsageRequest
	(*UpdateBplaParams)(nil),               // 32: mdts.UpdateBplaParams
	(*UpdateBplaRequest)(nil),              // 33: mdts.UpdateBplaRequest
	(*DeleteBplaRequest)(nil),              // 34: mdts.DeleteBplaRequest
	(*BplaResponse)(nil),                   // 35: mdts.BplaResponse
	(*BplasResponse)(nil),                  // 36: mdts.BplasResponse
	(*UpdateBplaResponse)(nil),             // 37: mdts.UpdateBplaResponse
	(*DeleteBplaResponse)(nil),             // 38: mdts.DeleteBplaResponse
	(*timestamppb.Timestamp)(nil),          // 39: google.protobuf.Timestamp
}
var file_mdts_mdts_proto_depIdxs = []int32{
	39, // 0: mdts.Alert.date:type_name -> google.protobuf.Timestamp
	39, // 1: mdts.Alert.time:type_name -> google.protobuf.Timestamp
	39, // 2: mdts.Bpla.entrydate:type_name -> google.protobuf.Timestamp
	39, // 3: mdts.CreateAlertRequest.date:type_name -> google.protobuf.Timestamp
	39, // 4: mdts.CreateAlertRequest.time:type_name -> google.protobuf.Timestamp
	39, // 5: mdts.GetAlertsByPeriodRequest.start_date:type_name -> google.protobuf.Timestamp
	39, // 6: mdts.GetAlertsByPeriodRequest.end_date:type_name -> google.protobuf.Timestamp
	39, // 7: mdts.CreateBplaRequest.entrydate:type_name -> google.protobuf.Timestamp
	9,  // 8: mdts.UpdateUserRequest.updateuserparams:type_name -> mdts.UpdateUserParams
	0,  // 9: mdts.UserResponse.user:type_name -> mdts.User
	0,  // 10: mdts.UsersResponse.user:type_name -> mdts.User
	39, // 11: mdts.UpdateAlertParams.date:type_name -> google.protobuf.Timestamp
	39, // 12: mdts.UpdateAlertParams.time:type_name -> google.protobuf.Timestamp
	19, // 13: mdts.UpdateAlertRequest.updatealertparams:type_name -> mdts.UpdateAlertParams
	1,  // 14: mdts.AlertResponse.alert:type_name -> mdts.Alert
	1,  // 15: mdts.AlertsResponse.alert:type_name -> mdts.Alert
	39, // 16: mdts.GetBplaByEntryDateRangeRequest.start_date:type_name -> google.protobuf.Timestamp
	39, // 17: mdts.GetBplaByEntryDateRangeRequest.end_date:type_name -> google.protobuf.Timestamp
	39, // 18: mdts.UpdateBplaParams.entrydate:type_name -> google.protobuf.Timestamp
	32, // 19: mdts.UpdateBplaRequest.updatebplaparams:type_name -> mdts.UpdateBplaParams
	2,  // 20: mdts.BplaResponse.bpla:type_name -> mdts.Bpla
	2,  // 21: mdts.BplasResponse.bpla:type_name -> mdts.Bpla
	6,  // 22: mdts.UserService.GetById:input_type -> mdts.GetUserByIdRequest
	7,  // 23: mdts.UserService.GetByUsername:input_type -> mdts.GetUserByUsernameRequest
	8,  // 24: mdts.UserService.GetAll:input_type -> mdts.GetAllUsersRequest
	10, // 25: mdts.UserService.Update:input_type -> mdts.UpdateUserRequest
	11, // 26: mdts.UserService.Delete:input_type -> mdts.DeleteUserRequest
	3,  // 27: mdts.AlertService.Create:input_type -> mdts.CreateAlertRequest
	16, // 28: mdts.AlertService.GetById:input_type -> mdts.GetAlertByIdRequest
	4,  // 29: mdts.AlertService.GetByPeriod:input_type -> mdts.GetAlertsByPeriodRequest
	18, // 30: mdts.AlertService.GetAll:input_type -> mdts.GetAllAlertsRequest
	20, // 31: mdts.AlertService.Update:input_type -> mdts.UpdateAlertRequest
	21, // 32: mdts.AlertService.Delete:input_type -> mdts.DeleteAlertRequest
	5,  // 33: mdts.BplaService.Create:input_type -> mdts.CreateBplaRequest
	26, // 34: mdts.BplaService.GetById:input_type -> mdts.GetBplaByIdRequest
	30, // 35: mdts.BplaService.GetByEntryDateRange:input_type -> mdts.GetBplaByEntryDateRangeRequest
	31, // 36: mdts.BplaService.GetByInUsage:input_type -> mdts.GetBplaByInUsageRequest
	29, // 37: mdts.BplaService.GetByModelAndBrand:input_type -> mdts.GetBplaByModelAndBrandRequest
	28, // 38: mdts.BplaService.GetAll:input_type -> mdts.GetAllBplasRequest
	33, // 39: mdts.BplaService.Update:input_type -> mdts.UpdateBplaRequest
	34, // 40: mdts.BplaService.Delete:input_type -> mdts.DeleteBplaRequest
	12, // 41: mdts.UserService.GetById:output_type -> mdts.UserResponse
	12, // 42: mdts.UserService.GetByUsername:output_type -> mdts.UserResponse
	13, // 43: mdts.UserService.GetAll:output_type -> mdts.UsersResponse
	14, // 44: mdts.UserService.Update:output_type -> mdts.UpdateUserResponse
	15, // 45: mdts.UserService.Delete:output_type -> mdts.DeleteUserResponse
	22, // 46: mdts.AlertService.Create:output_type -> mdts.AlertResponse
	22, // 47: mdts.AlertService.GetById:output_type -> mdts.AlertResponse
	23, // 48: mdts.AlertService.GetByPeriod:output_type -> mdts.AlertsResponse
	23, // 49: mdts.AlertService.GetAll:output_type -> mdts.AlertsResponse
	24, // 50: mdts.AlertService.Update:output_type -> mdts.UpdateAlertResponse
	25, // 51: mdts.AlertService.Delete:output_type -> mdts.DeleteAlertResponse
	35, // 52: mdts.BplaService.Create:output_type -> mdts.BplaResponse
	35, // 53: mdts.BplaService.GetById:output_type -> mdts.BplaResponse
	36, // 54: mdts.BplaService.GetByEntryDateRange:output_type -> mdts.BplasResponse
	36, // 55: mdts.BplaService.GetByInUsage:output_type -> mdts.BplasResponse
	36, // 56: mdts.BplaService.GetByModelAndBrand:output_type -> mdts.BplasResponse
	36, // 57: mdts.BplaService.GetAll:output_type -> mdts.BplasResponse
	37, // 58: mdts.BplaService.Update:output_type -> mdts.UpdateBplaResponse
	38, // 59: mdts.BplaService.Delete:output_type -> mdts.DeleteBplaResponse
	41, // [41:60] is the sub-list for method output_type
	22, // [22:41] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_mdts_mdts_proto_init() }
func file_mdts_mdts_proto_init() {
	if File_mdts_mdts_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mdts_mdts_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   39,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_mdts_mdts_proto_goTypes,
		DependencyIndexes: file_mdts_mdts_proto_depIdxs,
		MessageInfos:      file_mdts_mdts_proto_msgTypes,
	}.Build()
	File_mdts_mdts_proto = out.File
	file_mdts_mdts_proto_rawDesc = nil
	file_mdts_mdts_proto_goTypes = nil
	file_mdts_mdts_proto_depIdxs = nil
}
